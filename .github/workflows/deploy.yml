# This GitHub Actions workflow runs on every push to the master branch of the
# repository, and deploys a full containerized application on AWS.
#
# First, the workflow deploys AWS infrastructure resources from AWS
# CloudFormation templates, including a public load balancer and container
# image repository.
#
# Then, the workflow builds and deploys the Docker image for one or more
# microservices, using a CloudFormation template to deploy the image to an
# Amazon ECS service.

on:
  push:
    branches:
      - master

name: Deploy

jobs:
  # Deploy infrastructure resources like ECR repository and load balancer.
  # This job will run on every code change to the master branch, but will only deploy
  # changes if the infrastructure CloudFormation template in the repository have changed.
  deploy-infrastructure:
    name: Deploy infrastructure
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # The "environment name" is used as the base for CloudFormation stack names,
    # and is derived from the GitHub repository name.
    # For example, the repo 'Octocat/Hello-World' would have the environment name
    # 'Octocat-Hello-World' and would deploy a stack name 'Octocat-Hello-World-ecr-repo'.
    - name: Configure environment name
      id: env-name
      env:
        REPO: ${{ github.repository }}
      run: |
        ENVIRONMENT=`echo $REPO | tr "/" "-"`
        echo "Environment name: $ENVIRONMENT"
        echo "::set-output name=environment::$ENVIRONMENT"

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Deploy infrastructure with CloudFormation
      id: infrastructure-stack
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: ${{ steps.env-name.outputs.environment }}-infra
        template: cloudformation-templates/infrastructure.yml
        role-arn: arn:aws:iam::${{ steps.creds.outputs.aws-account-id }}:role/github-actions-cloudformation-stack-role
        no-fail-on-empty-changeset: "1"
        parameter-overrides: >-
          EnvironmentName=${{ steps.env-name.outputs.environment }},
          VPC=${{ steps.vpc.outputs.vpc-id }},
          PublicSubnetOne=${{ steps.vpc.outputs.subnet-one }},
          PublicSubnetTwo=${{ steps.vpc.outputs.subnet-two }}
